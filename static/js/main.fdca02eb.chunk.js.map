{"version":3,"sources":["Components/Media/Images/powered-by-foursquare-blue.svg","Components/ErrorBoundary/ErrorBoundary.js","API/FourSquare.js","Components/Header/Hamburger/Hamburger.js","Components/Header/Header.js","Components/Map/Map.js","Components/SideBar/ListItem/ListItem.js","Components/SideBar/VenueList/VenueList.js","Components/SideBar/SideBar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ErrorBoundary","error","info","this","props","updateGlobalState","hasError","console","log","react_default","a","createElement","className","children","Component","Helper","params","credentials","v","client_id","client_secret","Object","assign","urlEndpoint","getBaseURL","endpoint","axios","get","getRequestUrl","URLSearchParams","getParams","then","response","data","catch","FourSquareAPI","getResponse","venue_id","concat","Hamburger","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleWindowResize","window","innerWidth","setState","isActive","sideBarIsOpen","handleHamburgerClick","document","querySelector","classList","toggle","state","addEventListener","removeEventListener","tabIndex","type","onClick","Header","Hamburger_Hamburger_Hamburger","sideBarStatus","updateGlobal","MyMap","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","lng","zoom","center","parseFloat","markers","filter","marker","isVisible","map","idx","arr","venueInfo","venues","find","venue","id","key","position","onMarkerClick","animation","length","google","maps","Animation","BOUNCE","isOpen","onCloseClick","onInfoWindowClose","Fragment","bestPhoto","src","prefix","suffix","alt","name","toUpperCase","location","formattedAddress","addressLine","canonicalUrl","href","target","Map","Error","googleMapURL","loadingElement","containerElement","mapElement","Listitem","role","onListItemClick","onKeyPress","categories","icon","VenueList","ListItem_Listitem","inputTabIndex","SideBar","handleFilterVenues","query","trim","toLowerCase","includes","handleInputChange","e","value","activeMarkers","isMatched","activeMarker","activeVenues","placeholder","onChange","onFocus","VenueList_VenueList_VenueList","require","App","obj","refreshMarkers","handleMarkerClick","getVenueDetails","res","newVenue","appHasError","handleInfoWindowClose","handleListItemClick","mapCenter","mapZoom","venueParams","near","limit","_this2","searchVenues","results","geocode","feature","geometry","isParamsUpdated","Components_ErrorBoundary_ErrorBoundary","Header_Header_Header","SideBar_SideBar_SideBar","Map_Map_Map","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","getElementById","URL","process","origin","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sbCgCzBC,2MAvBKC,EAAOC,GACvBC,KAAKC,MAAMC,kBAAkB,CAAEC,UAAU,IACzCC,QAAQC,IAAIP,GACZM,QAAQC,IAAIN,oCAIZ,OAAIC,KAAKC,MAAME,SAEXG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,+DAKJR,KAAKC,MAAMS,gBApBMC,0DCgBtBC,4GAKF,MAAO,kEASQC,GACf,IAAMC,EAAc,CAClBC,EAvBqB,WAwBrBC,UA1BgB,mDA2BhBC,cA1BoB,oDA4BtB,OAAKJ,EAGIK,OAAOC,OAAOL,EAAaD,GAF3BC,wCAWUM,GACnB,OAAOpB,KAAKqB,aAAeD,EAAc,gFAUlBE,EAAUT,mFACpBU,IACVC,IACCxB,KAAKyB,cAAcH,GACnB,IAAII,gBAAgB1B,KAAK2B,UAAUd,KAEpCe,KAAK,SAAAC,GACJ,OAAOA,EAASC,OAEjBC,MAAM,SAAAjC,GAGL,OAFAM,QAAQC,IAAI,mFACZD,QAAQC,IAAIP,GACLA,0JAUMkC,oHAMSnB,GAC1B,OAAOD,EAAOqB,YAAP,kBAAsCpB,wCAQ3BA,GAClB,OAAOD,EAAOqB,YAAP,iBAAqCpB,2CAQvBqB,GACrB,OAAOtB,EAAOqB,YAAP,WAAAE,OAA8BD,2CAQjBA,GACpB,OAAOtB,EAAOqB,YAAP,WAAAE,OAA8BD,EAA9B,qBChHUE,oCACnB,SAAAA,EAAYnC,GAAO,IAAAoC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAlB,KAAAoC,IACjBC,EAAAnB,OAAAqB,EAAA,EAAArB,CAAAlB,KAAAkB,OAAAsB,EAAA,EAAAtB,CAAAkB,GAAAK,KAAAzC,KAAMC,KAaRyC,mBAAqB,WACfC,OAAOC,YAAc,MACvBP,EAAKQ,SAAS,CAAEC,UAAU,IAC1BT,EAAKpC,MAAMC,kBAAkB,CAAE6C,eAAe,MAjB/BV,EAiCnBW,qBAAuB,WACHC,SAASC,cAAc,cAC/BC,UAAUC,OAAO,aACvBf,EAAKgB,MAAMP,WAAyC,IAA7BT,EAAKpC,MAAM8C,eACpCV,EAAKQ,SAAS,CAAEC,UAAU,IAC1BT,EAAKpC,MAAMC,kBAAkB,CAAE6C,eAAe,MAE9CV,EAAKQ,SAAS,CAAEC,UAAU,IAC1BT,EAAKpC,MAAMC,kBAAkB,CAAE6C,eAAe,MAvChDV,EAAKgB,MAAQ,CACXP,UAAU,GAHKT,mFAsBjBrC,KAAK0C,qBACLC,OAAOW,iBAAiB,SAAUtD,KAAK0C,mEAIvCC,OAAOY,oBAAoB,SAAUvD,KAAK0C,qDAmB1C,OACEpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsB+C,SAAS,KAC5ClD,EAAAC,EAAAC,cAAA,UACEC,UACET,KAAKqD,MAAMP,SACP,sCACA,4BAENW,KAAK,SACLC,QAAS1D,KAAKgD,sBAEd1C,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,8BA3DWE,cCDlBgD,mLAEjB,OACErD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAACoD,EAAD,CACEb,cAAe/C,KAAKC,MAAM4D,cAC1B3D,kBAAmBF,KAAKC,MAAM6D,eAEhCxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,qCAT0BG,qBCkB9BoD,UAAQC,uBACZC,wBAAc,SAAAhE,GAAK,OACjBK,EAAAC,EAAAC,cAAC0D,EAAA,UAAD,CACEC,YAAa,GACbC,cAAe,CAAEC,IAAK,QAASC,IAAK,SACpCC,KAAMtE,EAAMsE,KACZC,OAAQ,CACNH,IAAKI,WAAWxE,EAAMuE,OAAOH,KAC7BC,IAAKG,WAAWxE,EAAMuE,OAAOF,OAU/BrE,EAAMyE,SACJzE,EAAMyE,QACHC,OAAO,SAAAC,GAAM,OAAIA,EAAOC,YACxBC,IAAI,SAACF,EAAQG,EAAKC,GACjB,IAAMC,EAAYhF,EAAMiF,OAAOC,KAC7B,SAAAC,GAAK,OAAIA,EAAMC,KAAOT,EAAOS,KAE/B,OACE/E,EAAAC,EAAAC,cAAC0D,EAAA,OAAD,CACEoB,IAAKP,EACLQ,SAAU,CAAElB,IAAKO,EAAOP,IAAKC,IAAKM,EAAON,KACzCZ,QAAS,kBAAMzD,EAAMuF,cAAcZ,IACnCa,UACiB,IAAfT,EAAIU,OACA/C,OAAOgD,OAAOC,KAAKC,UAAUC,OAC7BlB,EAAOa,WASbb,EAAOmB,QACLzF,EAAAC,EAAAC,cAAC0D,EAAA,WAAD,CACE8B,aAAc,kBAAM/F,EAAMgG,kBAAkBrB,KAE5CtE,EAAAC,EAAAC,cAACF,EAAAC,EAAM2F,SAAP,KACGjB,EAAUkB,WACT7F,EAAAC,EAAAC,cAAA,OACE4F,IAAG,GAAAjE,OAAK8C,EAAUkB,UAAUE,OAAzB,WAAAlE,OACD8C,EAAUkB,UAAUG,QAEtBC,IAAK,UAGTjG,EAAAC,EAAAC,cAAA,UAAKyE,EAAUuB,KAAKC,eACnBxB,EAAUyB,SAASC,kBAClB1B,EAAUyB,SAASC,iBAAiB7B,IAClC,SAAC8B,EAAa7B,GACZ,OAAOzE,EAAAC,EAAAC,cAAA,KAAG8E,IAAKP,GAAM6B,KAG1B3B,EAAU4B,cACTvG,EAAAC,EAAAC,cAAA,KAAGsG,KAAI,GAAA3E,OAAK8C,EAAU4B,cAAgBE,OAAQ,UAC5CzG,EAAAC,EAAAC,cAAA,6CAaLwG,mLAEjB,IAAIjD,EACF,MAAM,IAAIkD,MAAO,kCAEnB,OACE3G,EAAAC,EAAAC,cAACuD,EAAD7C,OAAAC,OAAA,GACMnB,KAAKC,MADX,CAEEiH,aACE,8FAEFC,eAAgB7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAC/B2G,iBAAkB9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACjC4G,WAAY/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAbFE,aClGZ2G,2LACV,IAAAjF,EAAArC,KACP,OACEM,EAAAC,EAAAC,cAACF,EAAAC,EAAM2F,SAAP,KACE5F,EAAAC,EAAAC,cAAA,MAAI+G,KAAK,gBACPjH,EAAAC,EAAAC,cAAA,OACEC,UAAW,YACX8G,KAAK,MACL/D,SAAUxD,KAAKC,MAAMuD,SACrBE,QAAS,kBAAMrB,EAAKpC,MAAMuH,gBAAgBnF,EAAKpC,QAC/CwH,WAAY,kBAAMpF,EAAKpC,MAAMuH,gBAAgBnF,EAAKpC,SAEjDD,KAAKC,MAAMyH,WAAW,IAErBpH,EAAAC,EAAAC,cAAA,OACE4F,IACEpG,KAAKC,MAAMyH,WAAW,GAAGC,KAAKtB,OAC9B,KACArG,KAAKC,MAAMyH,WAAW,GAAGC,KAAKrB,OAEhCC,IAAKvG,KAAKC,MAAMyH,WAAW,GAAGlB,OAGlClG,EAAAC,EAAAC,cAAA,SAAIR,KAAKC,MAAMuG,KAAKC,yBAvBM9F,cCEjBiH,2LACV,IAAAvF,EAAArC,KACP,OACEM,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAa8G,KAAK,UAAU/D,SAAS,KAChDxD,KAAKC,MAAMiF,QACVlF,KAAKC,MAAMiF,OAAOJ,IAAI,SAACM,EAAOL,GAAR,OACpBzE,EAAAC,EAAAC,cAACqH,EAAD3G,OAAAC,OAAA,CACEmE,IAAKP,EACLvB,SAAUuB,EAAM,EAAI1C,EAAKpC,MAAM6H,eAC3B1C,EAHN,CAIEoC,gBAAiBnF,EAAKpC,MAAMuH,6BAVH7G,cCClBoH,sBACnB,SAAAA,EAAY9H,GAAO,IAAAoC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAlB,KAAA+H,IACjB1F,EAAAnB,OAAAqB,EAAA,EAAArB,CAAAlB,KAAAkB,OAAAsB,EAAA,EAAAtB,CAAA6G,GAAAtF,KAAAzC,KAAMC,KAeR+H,mBAAqB,WACnB,MAC8B,KAA5B3F,EAAKgB,MAAM4E,MAAMC,QACkB,IAAnC7F,EAAKgB,MAAM4E,MAAMC,OAAOxC,OAEHrD,EAAKpC,MAAMiF,OAAOP,OAAO,SAAAS,GAAK,OACjDA,EAAMoB,KAAK2B,cAAcC,SAAS/F,EAAKgB,MAAM4E,MAAME,iBAI9C9F,EAAKpC,MAAMiF,QA1BH7C,EAmCnBgG,kBAAoB,SAAAC,GAClBjG,EAAKQ,SAAS,CAAEoF,MAAOK,EAAEvB,OAAOwB,MAAML,SACtC,IAAMM,EAAgBnG,EAAKpC,MAAMiF,OAAOJ,IAAI,SAAAM,GAC1C,IAAMqD,EAAYrD,EAAMoB,KACrB2B,cACAC,SAASE,EAAEvB,OAAOwB,MAAML,OAAOC,eAC5BO,EAAerG,EAAKpC,MAAMyE,QAAQS,KACtC,SAAAP,GAAM,OAAIA,EAAOS,KAAOD,EAAMC,KAOhC,OAJEqD,EAAa7D,YADX4D,EAKGC,IAETrG,EAAKpC,MAAMC,kBAAkB,CAAEwE,QAAS8D,KAjDxCnG,EAAKgB,MAAQ,CACX4E,MAAO,GACPU,aAAc,GACdb,cAAe,GALAzF,wEAuDjB,OACErC,KAAKC,MAAM8C,eACTzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SACEiD,KAAK,SACL4B,GAAG,SACHuD,YAAY,iBACZC,SAAU7I,KAAKqI,kBACfS,QAAS9I,KAAKqI,kBACd7E,SAAS,OAGblD,EAAAC,EAAAC,cAACuI,EAAD7H,OAAAC,OAAA,GACMnB,KAAKC,MADX,CAEEiF,OAAQlF,KAAKgI,qBACbR,gBAAiBxH,KAAKC,MAAMuH,gBAC5BM,cAAe9H,KAAKqD,MAAMyE,iBAE5BxH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,8BACqB,IACnBF,EAAAC,EAAAC,cAAA,KAAGsG,KAAK,qCAAR,gBAGJxG,EAAAC,EAAAC,cAAA,OACE4F,IAAK4C,EAAQ,KACbzC,IAAI,oCArFiB5F,cC0LtBsI,cArLb,SAAAA,IAAc,IAAA5G,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAlB,KAAAiJ,IACZ5G,EAAAnB,OAAAqB,EAAA,EAAArB,CAAAlB,KAAAkB,OAAAsB,EAAA,EAAAtB,CAAA+H,GAAAxG,KAAAzC,QAmBFE,kBAAoB,SAACgJ,GACnB7G,EAAKQ,SAASqG,IArBF7G,EA0Ed8G,eAAiB,WACf,IAAMzE,EAAUrC,EAAKgB,MAAMqB,QAAQI,IAAI,SAAAF,GAErC,OADAA,EAAOmB,QAAS,EACTnB,IAETvC,EAAKQ,SAAS,CAAE6B,QAASxD,OAAOC,OAAOkB,EAAKgB,MAAMqB,QAASA,MA/E/CrC,EAuFd+G,kBAAoB,SAAAxE,GAClBvC,EAAK8G,iBACLvE,EAAOmB,QAAS,EAChB1D,EAAKQ,SAAS,CACZ6B,QAASxD,OAAOC,OAAOkB,EAAKgB,MAAMqB,QAASE,KAM7C,IAAMQ,EAAQ/C,EAAKgB,MAAM6B,OAAOC,KAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOT,EAAOS,KAClErD,EAAcqH,gBAAgBzE,EAAOS,IAAIzD,KAAK,SAAA0H,GAC5C,IAAMC,EAAWrI,OAAOC,OAAOiE,EAAOkE,EAAIzH,SAASuD,OACnD/C,EAAKQ,SAAS,CAAEqC,OAAQhE,OAAOC,OAAOkB,EAAKgB,MAAM6B,OAAQqE,OAG1DxH,MAAM,SAAAjC,GACLuC,EAAKQ,SAAS,CAAE2G,aAAa,IAC7BpJ,QAAQC,IAAI,+CACZD,QAAQC,IAAIP,MA1GFuC,EAiHdoH,sBAAwB,WACtBpH,EAAK8G,kBAlHO9G,EA0HdqH,oBAAsB,SAAAtE,GACpB/C,EAAK8G,iBACL,IAAMvE,EAASvC,EAAKgB,MAAMqB,QAAQS,KAAK,SAAAP,GAAM,OAAIA,EAAOS,KAAOD,EAAMC,KACrEhD,EAAK+G,kBAAkBxE,IA3HvBvC,EAAKgB,MAAQ,CACX6B,OAAQ,GACRR,QAAS,GACTiF,UAAW,GACXC,QAAS,GACT7G,eAAe,EACfyG,aAAa,EACbK,YAAa,CACX5B,MAAO,SACP6B,KAAM,SACNC,MAAO,KAZC1H,mFAyCO,IAAA2H,EAAAhK,KACnBgC,EAAciI,aAAajK,KAAKqD,MAAMwG,aACnCjI,KAAK,SAAAsI,GAAW,IACPhF,EAAWgF,EAAQrI,SAAnBqD,OACAV,EAAW0F,EAAQrI,SAASsI,QAAQC,QAAQC,SAA5C7F,OACFE,EAAUQ,EAAOJ,IAAI,SAAAM,GACzB,MAAO,CACLf,IAAKe,EAAMsB,SAASrC,IACpBC,IAAKc,EAAMsB,SAASpC,IACpByB,QAAQ,EACRlB,WAAW,EACXQ,GAAID,EAAMC,MAGd2E,EAAKnH,SAAS,CACZqC,OAAQA,EACRR,QAASA,EACTiF,UAAWnF,EACX8F,iBAAiB,IAEnBlK,QAAQC,IAAI6J,KAEbnI,MAAM,SAAAjC,GACLkK,EAAKnH,SAAS,CAAE2G,aAAa,IAC7BpJ,QAAQC,IAAI,sEACZD,QAAQC,IAAIP,sCAgEhB,OAAIE,KAAKqD,MAAMlD,SAEXG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+J,EAAD,CACEpK,SAAUH,KAAKqD,MAAMmG,YACrBtJ,kBAAmBF,KAAKE,qBAM5BI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+J,EAAD,CACEpK,SAAUH,KAAKqD,MAAMmG,YACrBtJ,kBAAmBF,KAAKE,mBAE1BI,EAAAC,EAAAC,cAACgK,EAAD,CACE3G,cAAe7D,KAAKqD,MAAMN,cAC1Be,aAAc9D,KAAKE,oBAErBI,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAACiK,EAAD,CACE1H,cAAe/C,KAAKqD,MAAMN,cAC1BmC,OAAQlF,KAAKqD,MAAM6B,OACnBR,QAAS1E,KAAKqD,MAAMqB,QACpB8C,gBAAiBxH,KAAK0J,oBACtBxJ,kBAAmBF,KAAKE,oBAE1BI,EAAAC,EAAAC,cAACkK,EAAD,CACElG,OAAQxE,KAAKqD,MAAMsG,UACnBpF,KAAMvE,KAAKqD,MAAMuG,QACjB1E,OAAQlF,KAAKqD,MAAM6B,OACnBR,QAAS1E,KAAKqD,MAAMqB,QACpBc,cAAexF,KAAKoJ,kBACpBnD,kBAAmBjG,KAAKyJ,sBACxBvJ,kBAAmBF,KAAKE,oBAE1BI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OACE4F,IAAK4C,EAAQ,KACbzC,IAAI,qCA3KJ5F,aCFZgK,EAAcC,QACW,cAA7BjI,OAAO+D,SAASmE,UAEe,UAA7BlI,OAAO+D,SAASmE,UAEhBlI,OAAO+D,SAASmE,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTpJ,KAAK,SAAAyJ,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBlI,QACf6H,UAAUC,cAAcO,YAI1BtL,QAAQC,IACN,gHAKE4K,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlBjL,QAAQC,IAAI,sCAGR4K,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,UAO5BtJ,MAAM,SAAAjC,GACLM,QAAQN,MAAM,4CAA6CA,KC1FjE+L,IAASC,OAAOxL,EAAAC,EAAAC,cAACuL,EAAD,MAAS9I,SAAS+I,eAAe,SDgB1C,SAAkBf,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,kCAAwBvJ,OAAO+D,SAASI,MACpDqF,SAAWxJ,OAAO+D,SAASyF,OAIvC,OAGFxJ,OAAOW,iBAAiB,OAAQ,WAC9B,IAAM0H,EAAK,GAAA7I,OAAM+J,kCAAN,sBAEPvB,GAgEV,SAAiCK,EAAOC,GAEtCmB,MAAMpB,GACHpJ,KAAK,SAAAC,GAEJ,IAAMwK,EAAcxK,EAASyK,QAAQ9K,IAAI,gBAEnB,MAApBK,EAAS0K,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CtB,UAAUC,cAAcsB,MAAM7K,KAAK,SAAAyJ,GACjCA,EAAaqB,aAAa9K,KAAK,WAC7Be,OAAO+D,SAASiG,aAKpB5B,EAAgBC,EAAOC,KAG1BlJ,MAAM,WACL3B,QAAQC,IACN,mEArFAuM,CAAwB5B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAM7K,KAAK,WACjCxB,QAAQC,IACN,+GAMJ0K,EAAgBC,EAAOC,MCnC/BE","file":"static/js/main.fdca02eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/powered-by-foursquare-blue.b82e963c.svg\";","/**\r\n * Component-> Error Boundary\r\n *\r\n * Returns -> rendered fallback UI if any bounded component catches error\r\n */\r\nimport React, { Component } from \"react\";\r\nimport \"./ErrorBoundary.css\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  componentDidCatch(error, info) {\r\n    this.props.updateGlobalState({ hasError: true });\r\n    console.log(error);\r\n    console.log(info);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.hasError) {\r\n      return (\r\n        <div className=\"error-page\">\r\n          <div className=\"error\">\r\n            <h1>Error: Could not load the components.</h1>\r\n            <h2>Please refresh the page to try again.</h2>\r\n            <h3>If the problem persists, contact the developer.</h3>\r\n            <p><i>(Check the developer console for error details)</i></p>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","/**\r\n * Foursquare class built on the top of Foursquare API\r\n * to handle API request & response for the venues' data.\r\n *\r\n * Uses => 'axios' library instead of 'fetch' to cater the\r\n * REST request & response.\r\n *\r\n * Returns => JSON parsed Response\r\n */\r\n\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * Credentials for the FOURSQUARE API\r\n */\r\nconst FOURSQUARE_ID = \"VYQN5SKLH1VR2RUFIHYKWPNFZFDP0DO4FZDYKWIW4SYKZPVD\";\r\nconst FOURSQUARE_SECRET = \"HLGAVNOAKSQKJMVTD0PXHY43BA0Y2BVI0PUWH1A4IBTKTH5V\";\r\nconst FOURSQUARE_VERSION = \"20180323\";\r\n\r\n/**\r\n * Helper class for the\r\n *\r\n * Contains => methods to built & format request URLs and response data\r\n */\r\nclass Helper {\r\n  /**\r\n   * Returns => base URL for the FourSquare API\r\n   */\r\n  static getBaseURL() {\r\n    return \"https://api.foursquare.com/v2\";\r\n  }\r\n\r\n  /**\r\n   * Builds and returns the parameters to be used for the FourSquare API requests.\r\n   * Concatenates the request parameters with the credentials\r\n   *\r\n   * @param {Object} params : Request URL parameters\r\n   */\r\n  static getParams(params) {\r\n    const credentials = {\r\n      v: FOURSQUARE_VERSION,\r\n      client_id: FOURSQUARE_ID,\r\n      client_secret: FOURSQUARE_SECRET\r\n    };\r\n    if (!params) {\r\n      return credentials;\r\n    } else {\r\n      return Object.assign(credentials, params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds and returns the URL endpoint for the API request\r\n   *\r\n   * @param {string} urlEndpoint : Endpoint of API request URL\r\n   */\r\n  static getRequestUrl(urlEndpoint) {\r\n    return this.getBaseURL() + urlEndpoint + \"?\";\r\n  }\r\n\r\n  /**\r\n   * Fetches the response from the Foursquare\r\n   *\r\n   * @param {string} endpoint  : Endpoint of API request URL\r\n   * @param {object} params  : Request URL parameters\r\n   */\r\n\r\n  static async getResponse(endpoint, params) {\r\n    return await axios\r\n      .get(\r\n        this.getRequestUrl(endpoint) +\r\n        new URLSearchParams(this.getParams(params))\r\n      )\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        console.log(\"Error is in fetching response from FOURSQUARE in getResponse() in FourSquare.js\")\r\n        console.log(error)\r\n        return error;\r\n      });\r\n  }\r\n}\r\n\r\n/**\r\n * Main class to be exported\r\n *\r\n * Contains => Methods for different FourSquare API requests\r\n */\r\nexport default class FourSquareAPI {\r\n  /**\r\n   * Returns recommended venues from the FourSquare\r\n   *\r\n   * @param {object} params : Request parameters\r\n   */\r\n  static getRecommendedVenues(params) {\r\n    return Helper.getResponse(`/venues/explore`, params);\r\n  }\r\n\r\n  /**\r\n   * Returns search result venues from the FourSquare\r\n   *\r\n   * @param {object} params : Request parameters\r\n   */\r\n  static searchVenues(params) {\r\n    return Helper.getResponse(`/venues/search`, params);\r\n  }\r\n\r\n  /**\r\n   * Returns the details of a single venue\r\n   *\r\n   * @param {string} venue_id : ID of the venue\r\n   */\r\n  static getVenueDetails(venue_id) {\r\n    return Helper.getResponse(`/venues/${venue_id}`);\r\n  }\r\n\r\n  /**\r\n   * Returns the details of a single venue\r\n   *\r\n   * @param {string} venue_id : ID of the venue\r\n   */\r\n  static getVenuePhotos(venue_id) {\r\n    return Helper.getResponse(`/venues/${venue_id}/photos`);\r\n  }\r\n}\r\n","/**\r\n * Component -> Hamburger Icon in the header\r\n *\r\n * Controls behavior of the sidebar\r\n *\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./hamburger.min.css\";\r\nimport \"./Hamburger.css\";\r\n\r\nexport default class Hamburger extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isActive: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Toggles state of sidebar on windows resizing event\r\n   *\r\n   * Sidebar is closed automatically on smaller screens to ensure responsiveness\r\n   * & a better UX\r\n   *\r\n   */\r\n  handleWindowResize = () => {\r\n    if (window.innerWidth <= 768) {\r\n      this.setState({ isActive: false });\r\n      this.props.updateGlobalState({ sideBarIsOpen: false });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.handleWindowResize();\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  /**\r\n   * Toggles hamburger animation & global state of sidebar on click event\r\n   */\r\n  handleHamburgerClick = () => {\r\n    const hamburger = document.querySelector(\".hamburger\");\r\n    hamburger.classList.toggle(\"is-active\");\r\n    if (this.state.isActive && this.props.sideBarIsOpen === true) {\r\n      this.setState({ isActive: false });\r\n      this.props.updateGlobalState({ sideBarIsOpen: false });\r\n    } else {\r\n      this.setState({ isActive: true });\r\n      this.props.updateGlobalState({ sideBarIsOpen: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hamburger-container\" tabIndex=\"1\">\r\n        <button\r\n          className={\r\n            this.state.isActive\r\n              ? \"hamburger hamburger--spin is-active\"\r\n              : \"hamburger hamburger--spin\"\r\n          }\r\n          type=\"button\"\r\n          onClick={this.handleHamburgerClick}\r\n        >\r\n          <span className=\"hamburger-box\">\r\n            <span className=\"hamburger-inner\" />\r\n          </span>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Component -> Header\r\n *\r\n * Contains hamburger icon and the title\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./Header.css\";\r\nimport Hamburger from \"./Hamburger/Hamburger\";\r\n\r\nexport default class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"header\">\r\n        <Hamburger\r\n          sideBarIsOpen={this.props.sideBarStatus}\r\n          updateGlobalState={this.props.updateGlobal}\r\n        />\r\n        <div className=\"title\">\r\n          <h1>Find My Coffee</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Component -> Map\r\n *\r\n * Built on the top of React-Google-Maps API\r\n *\r\n * Contains & controls-> Map, Markers, InfoWindows\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow\r\n} from \"react-google-maps\";\r\nimport \"./Map.css\";\r\n\r\n\r\nconst MAPS_API_KEY = \"AIzaSyDQnbsXckiHxVKDJI8secUufNqEJ0TUREE\";\r\n\r\n/**\r\n * Component MyMap\r\n *\r\n * Loads & renders the map with Javascript\r\n * Details here -> tomchentw.github.io/react-google-maps/#usage--configuration\r\n */\r\nconst MyMap = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{ lat: 31.5204, lng: 74.3587 }}\r\n      zoom={props.zoom}\r\n      center={{\r\n        lat: parseFloat(props.center.lat),\r\n        lng: parseFloat(props.center.lng)\r\n      }}\r\n    >\r\n      {/* *\r\n       * Receives \"markers\" as props from the main app components\r\n       *\r\n       * Filters using isVisible attribute of markers\r\n       *\r\n       * Displays only the active markers as specified from the sidebar component\r\n       * */\r\n      props.markers &&\r\n        props.markers\r\n          .filter(marker => marker.isVisible)\r\n          .map((marker, idx, arr) => {\r\n            const venueInfo = props.venues.find(\r\n              venue => venue.id === marker.id\r\n            );\r\n            return (\r\n              <Marker\r\n                key={idx}\r\n                position={{ lat: marker.lat, lng: marker.lng }}\r\n                onClick={() => props.onMarkerClick(marker)}\r\n                animation={\r\n                  arr.length === 1\r\n                    ? window.google.maps.Animation.BOUNCE\r\n                    : marker.animation\r\n                }\r\n              >\r\n                {/* *\r\n                 * Displays infoWindow of the marker\r\n                 *\r\n                 * Controlled by marker click event\r\n                 *\r\n                 * */\r\n                marker.isOpen && (\r\n                  <InfoWindow\r\n                    onCloseClick={() => props.onInfoWindowClose(marker)}\r\n                  >\r\n                    <React.Fragment>\r\n                      {venueInfo.bestPhoto && (\r\n                        <img\r\n                          src={`${venueInfo.bestPhoto.prefix}200x200${\r\n                            venueInfo.bestPhoto.suffix\r\n                          }`}\r\n                          alt={\"Venue\"}\r\n                        />\r\n                      )}\r\n                      <h3>{venueInfo.name.toUpperCase()}</h3>\r\n                      {venueInfo.location.formattedAddress &&\r\n                        venueInfo.location.formattedAddress.map(\r\n                          (addressLine, idx) => {\r\n                            return <p key={idx}>{addressLine}</p>;\r\n                          }\r\n                        )}\r\n                      {venueInfo.canonicalUrl && (\r\n                        <a href={`${venueInfo.canonicalUrl}`} target={\"_blank\"}>\r\n                          <b>View @ FourSquare.com</b>\r\n                        </a>\r\n                      )}\r\n                    </React.Fragment>\r\n                  </InfoWindow>\r\n                )}\r\n              </Marker>\r\n            );\r\n          })}\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nexport default class Map extends Component {\r\n  render() {\r\n    if(!MyMap) {\r\n      throw new Error (\"Error: Could not load the map.\")\r\n    }\r\n    return (\r\n      <MyMap\r\n        {...this.props}\r\n        googleMapURL={\r\n          \"https://maps.googleapis.com/maps/api/js?v=3.exp&key=\" + MAPS_API_KEY\r\n        }\r\n        loadingElement={<div className=\"loading-element\" />}\r\n        containerElement={<div className=\"map-container\" />}\r\n        mapElement={<div className=\"map-element\" />}\r\n      />\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Component list item -> listed venue\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport \"./ListItem.css\";\r\n\r\nexport default class Listitem extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <li role=\"presentation\">\r\n          <div\r\n            className={\"list-item\"}\r\n            role=\"tab\"\r\n            tabIndex={this.props.tabIndex}\r\n            onClick={() => this.props.onListItemClick(this.props)}\r\n            onKeyPress={() => this.props.onListItemClick(this.props)}\r\n          >\r\n            {this.props.categories[0] && (\r\n              /** Icon for category type of the venues; displays only on screen size larger than 768px */\r\n              <img\r\n                src={\r\n                  this.props.categories[0].icon.prefix +\r\n                  \"32\" +\r\n                  this.props.categories[0].icon.suffix\r\n                }\r\n                alt={this.props.categories[0].name}\r\n              />\r\n            )}\r\n            <p>{this.props.name.toUpperCase()}</p>\r\n          </div>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Component -> Venue List\r\n *\r\n * Contains -> List Item (Venue)\r\n */\r\nimport React, { Component } from \"react\";\r\nimport ListItem from \"../ListItem/ListItem\";\r\nimport \"./VenueList.css\";\r\n\r\nexport default class VenueList extends Component {\r\n  render() {\r\n    return (\r\n      <ol className=\"venue-list\" role=\"tablist\" tabIndex=\"0\">\r\n        {this.props.venues &&\r\n          this.props.venues.map((venue, idx) => (\r\n            <ListItem\r\n              key={idx}\r\n              tabIndex={idx + 1 + this.props.inputTabIndex}\r\n              {...venue}\r\n              onListItemClick={this.props.onListItemClick}\r\n            />\r\n          ))}\r\n      </ol>\r\n    );\r\n  }\r\n}\r\n","/**\r\n * Component -> SideBar\r\n *\r\n * Handles filtering of venues & markers using input search\r\n */\r\n\r\nimport React, { Component } from \"react\";\r\nimport VenueList from \"./VenueList/VenueList\";\r\nimport \"./SideBar.css\";\r\n\r\nexport default class SideBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n      activeVenues: [],\r\n      inputTabIndex: 2\r\n    };\r\n  }\r\n\r\n  /**\r\n   *  Function -> handleFilterVenues\r\n   *\r\n   *  Filters venues listed in the sidebar\r\n   *\r\n   *  returns -> filtered venues from the search query\r\n   */\r\n  handleFilterVenues = () => {\r\n    if (\r\n      this.state.query.trim() !== \"\" ||\r\n      this.state.query.trim().length !== 0\r\n    ) {\r\n      const activeVenues = this.props.venues.filter(venue =>\r\n        venue.name.toLowerCase().includes(this.state.query.toLowerCase())\r\n      );\r\n      return activeVenues;\r\n    } else {\r\n      return this.props.venues;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Function -> listens to the onChange & onFocus of search box\r\n   *\r\n   * toggles markers' visibilty according to the search query\r\n   */\r\n  handleInputChange = e => {\r\n    this.setState({ query: e.target.value.trim() });\r\n    const activeMarkers = this.props.venues.map(venue => {\r\n      const isMatched = venue.name\r\n        .toLowerCase()\r\n        .includes(e.target.value.trim().toLowerCase());\r\n      const activeMarker = this.props.markers.find(\r\n        marker => marker.id === venue.id\r\n      );\r\n      if (isMatched) {\r\n        activeMarker.isVisible = true;\r\n      } else {\r\n        activeMarker.isVisible = false;\r\n      }\r\n      return activeMarker;\r\n    });\r\n    this.props.updateGlobalState({ markers: activeMarkers });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      this.props.sideBarIsOpen && (\r\n        <div className=\"sidebar-container\">\r\n          <div className=\"sidebar-menu\">\r\n            <div className=\"search-box\">\r\n              <input\r\n                type=\"search\"\r\n                id=\"search\"\r\n                placeholder=\"Filter by name\"\r\n                onChange={this.handleInputChange}\r\n                onFocus={this.handleInputChange}\r\n                tabIndex=\"2\"\r\n              />\r\n            </div>\r\n            <VenueList\r\n              {...this.props}\r\n              venues={this.handleFilterVenues()}\r\n              onListItemClick={this.props.onListItemClick}\r\n              inputTabIndex={this.state.inputTabIndex}\r\n            />\r\n            <div className=\"attribution\">\r\n              <h3>\r\n                <b>\r\n                  DATA PROVIDED BY -{\" \"}\r\n                  <a href=\"https://developer.foursquare.com/\">FOURSQUARE</a>\r\n                </b>\r\n              </h3>\r\n              <img\r\n                src={require(\"../Media/Images/powered-by-foursquare-blue.svg\")}\r\n                alt=\"Powered by FOURSQUARE\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    );\r\n  }\r\n}\r\n","/**\n * Main app component to contain all other comonents.\n *\n * Contains => App -> Header, (Main ->> SideBar, Map), ErrorBoundary\n *\n */\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ErrorBoundary from \"./Components/ErrorBoundary/ErrorBoundary\";\nimport FourSquareAPI from \"./API/FourSquare\";\nimport Header from \"./Components/Header/Header\";\nimport Map from \"./Components/Map/Map\"\nimport SideBar from \"./Components/SideBar/SideBar\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      venues: [],\n      markers: [],\n      mapCenter: [],\n      mapZoom: 12,\n      sideBarIsOpen: true,\n      appHasError: false,\n      venueParams: {\n        query: \"Coffee\",\n        near: \"Lahore\",\n        limit: 10\n      },\n    };\n  }\n\n  /**\n   * Updates the state of highest parent -> app component\n   */\n  updateGlobalState = (obj) => {\n    this.setState(obj);\n  };\n\n  /*updateVenueParams = (obj) => {\n    if (\n      JSON.stringify(this.state.venueParams).toLowerCase() !==\n      JSON.stringify(obj).toLowerCase()\n    ) {\n      this.setState({ isParamsUpdated: true, venueParams: obj });\n      console.log(\"first if ... params updated: \", this.state.isParamsUpdated);\n    } else {\n      this.setState({ isParamsUpdated: false });\n      console.log(\"2nd if ... params updated: \", this.state.isParamsUpdated);\n    }\n  };*/\n\n  /**\n   * Gets the response from the Foursquare &\n   * update initial state of the app\n   */\n  componentDidMount () {\n    FourSquareAPI.searchVenues(this.state.venueParams)\n      .then(results => {\n        const { venues } = results.response;\n        const { center } = results.response.geocode.feature.geometry;\n        const markers = venues.map(venue => {\n          return {\n            lat: venue.location.lat,\n            lng: venue.location.lng,\n            isOpen: false,\n            isVisible: true,\n            id: venue.id,\n          };\n        });\n        this.setState({\n          venues: venues,\n          markers: markers,\n          mapCenter: center,\n          isParamsUpdated: false\n        });\n        console.log(results);\n      })\n      .catch(error => {\n        this.setState({ appHasError: true });\n        console.log(\"Error is in setting initial state in componentDidMount() in App.js\")\n        console.log(error);\n      });\n  };\n  /**\n   * Sets the isOpen property of all markers to false\n   *\n   * hence the infoWindow's visibilty\n   */\n  refreshMarkers = () => {\n    const markers = this.state.markers.map(marker => {\n      marker.isOpen = false;\n      return marker;\n    });\n    this.setState({ markers: Object.assign(this.state.markers, markers) });\n  };\n\n  /**\n   * Marker click handler\n   *\n   * handles the visibilty of infoWindow\n   */\n  handleMarkerClick = marker => {\n    this.refreshMarkers();\n    marker.isOpen = true;\n    this.setState({\n      markers: Object.assign(this.state.markers, marker)\n    });\n    //console.log(marker);\n    /**\n     * Calls the API method to get more details about the venue & update the state accordingly\n     */\n    const venue = this.state.venues.find(venue => venue.id === marker.id);\n    FourSquareAPI.getVenueDetails(marker.id).then(res => {\n      const newVenue = Object.assign(venue, res.response.venue);\n      this.setState({ venues: Object.assign(this.state.venues, newVenue) })\n      //console.log(newVenue);\n    })\n    .catch(error => {\n      this.setState({ appHasError: true });\n      console.log(\"Error is in fetching the details of venues.\")\n      console.log(error);\n    });\n  };\n\n  /**\n   * refreshes the marker's state on closing infoWindow\n   */\n  handleInfoWindowClose = () => {\n    this.refreshMarkers();\n  };\n\n  /**\n   * ListItem (venue) handler of the side bar\n   *\n   * displays the marker of the clicked venue item\n   */\n  handleListItemClick = venue => {\n    this.refreshMarkers();\n    const marker = this.state.markers.find(marker => marker.id === venue.id);\n    this.handleMarkerClick(marker);\n    //console.log(venue);\n  };\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"App\">\n          <ErrorBoundary\n            hasError={this.state.appHasError}\n            updateGlobalState={this.updateGlobalState}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <ErrorBoundary\n            hasError={this.state.appHasError}\n            updateGlobalState={this.updateGlobalState}\n          >\n          <Header\n            sideBarStatus={this.state.sideBarIsOpen}\n            updateGlobal={this.updateGlobalState}\n          />\n          <main>\n              <SideBar\n                sideBarIsOpen={this.state.sideBarIsOpen}\n                venues={this.state.venues}\n                markers={this.state.markers}\n                onListItemClick={this.handleListItemClick}\n                updateGlobalState={this.updateGlobalState}\n              />\n              <Map\n                center={this.state.mapCenter}\n                zoom={this.state.mapZoom}\n                venues={this.state.venues}\n                markers={this.state.markers}\n                onMarkerClick={this.handleMarkerClick}\n                onInfoWindowClose={this.handleInfoWindowClose}\n                updateGlobalState={this.updateGlobalState}\n              />\n              <div className=\"footer\">\n                <img\n                  src={require(\"./Components/Media/Images/powered-by-foursquare-blue.svg\")}\n                  alt=\"Powered by FOURSQUARE\"\n                />\n              </div>\n          </main>\n          </ErrorBoundary>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\n/**\n * registered service worker\n */\nserviceWorker.register();\n"],"sourceRoot":""}